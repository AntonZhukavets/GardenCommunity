@model GardenCommunity.Web.Models.UserViewModel

@{
    ViewData["Title"] = "GetUser";
}

<h2>Edit user</h2>

@using (Html.BeginForm("EditUser", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (User.IsInRole("Administrator"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Role.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-inline">
                @Html.DropDownList("role", ViewBag.rolesViewModel as SelectList, new { @class = "form-control" })
                <input type="button" value="Change" class="btn btn-primary" id="btn_change" />
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Role.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Role.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Role.Name, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-4">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    @Html.TextBoxFor(model=>model.Role.Id, htmlAttributes: new { @id = "RoleId", @hidden = "hidden" })
}

<div>
    @Html.ActionLink("Back to Home page", "GetMembers", "Member")
</div>

@section Scripts {

    <script type="text/javascript">

        $('#btn_change').click(function () {
            if (confirm('Are you sure you wish to change role?')) {
                alert($('#role').val());
                $('#RoleId').val($('#role').val());
            }

        });
    </script>
}

