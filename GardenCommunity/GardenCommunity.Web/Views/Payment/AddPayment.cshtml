@model GardenCommunity.Common.Entities.Payment

@{
    ViewData["Title"] = "AddPayment";
}

@using (Html.BeginForm("AddPayment", "Payment", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Add payment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.DateOfPayment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.DateOfPayment, new { htmlAttributes = new { @class = "form-control", @onchange = "DateChange();" } })
            @Html.ValidationMessageFor(model => model.DateOfPayment, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MemberId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.MemberId, ViewBag.payers as SelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.DropDownListFor(model => model.RateId, new List<SelectListItem>(), string.Empty, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RateId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Rate.BankCollectionPercent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Rate.BankCollectionPercent, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Rate.BankCollectionPercent, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rate.FinePercent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Rate.FinePercent, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Rate.FinePercent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Indication.LastIndication, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Indication.LastIndication, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Indication.LastIndication, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaidFor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.PaidFor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PaidFor, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Indication.CurrentIndication, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Indication.CurrentIndication, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Indication.CurrentIndication, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ToPay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.ToPay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ToPay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Indication.LoosesPercent, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Indication.LoosesPercent, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Indication.LoosesPercent, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "GetPayments", "Payment")
</div>
@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });
        });
        function DateChange() {
            var DateOfPayment = $('#DateOfPayment').val(); 
            $.ajax({
                url: '@Url.Action("GetRates", "Rate")',
                type: 'POST',
                traditional: true,                
                async: true,
                data: { dateOfPayment: $('#DateOfPayment').val() },
                success: function (result) {
                    $('#RateId').empty();
                    $('#RateId').prepend($("<option     />").val(0));
                    for (var i = 0; i < result.length; i++) {
                        $('#RateId').append($("<option     />").val(result[i].id).text(result[i].rateName));
                    }
                    }         
            });
        }


        $('#RateId').change(function () {
            var id = $('#RateId').val();
            if (id != 0) {
                $.ajax({
                url: '@Url.Action("GetRate", "Rate")'+'/'+id,
                type: 'GET',
                traditional: true,                
                async: true,
                    success: function (result) {                       
                        $('#Rate_BankCollectionPercent').val(result.bankCollectionPercent);
                        $('#Rate_FinePercent').val(result.finePercent);
                    }
            });

            }
        });

        $('#MemberId').change(function () {
            var id = $('#MemberId').val();
            $.ajax({
                url: '@Url.Action("GetLastPaymentByMemberId", "Payment")'+'/'+id,
                type: 'GET',
                traditional: true,                
                async: true,
                    success: function (result) {                       
                        $('#Rate_BankCollectionPercent').val(result.bankCollectionPercent);
                        $('#Rate_FinePercent').val(result.finePercent);
                    }
            });

        });
    </script>
}